#region Copyright © 2020 Aver. All rights reserved.
/*
=====================================================
 AverFrameWork v1.0
 Filename:    QuadTree.cs
 Author:      Zeng Zhiwei
 Time:        2021/3/16 17:35:00
=====================================================
*/
#endregion

/*
 二叉树只支持一维数据，四叉树支持二维数据【四个象限】，八叉树支持三维数据【x,y,z】
 四叉树常见的应用有图像处理、空间数据索引、2D中的快速碰撞检测、稀疏数据等
 根据其存储内容，四叉树可以分为点四叉树、边四叉树和块四叉树，今天我们实现的是点四叉树。
 根据其结构，四叉树分为满四叉树和非满四叉树。
 对于满四叉树，每个节点都有四个子结点，它有着固定的深度，数据全都存在最底层的子结点中，进行数据插入时不需要分裂。
 满四叉树在确定好深度后，进行插入操作很快，可是如果用它来存储下图所示数据，我们会发现，四叉树的好多叉都是空的，当然它们会造成内存空间的大量浪费。
 非满四叉树解决了此问题，它为每个结点添加一个“容量”的属性，在四叉树初始化时只有一个根结点，在插入数据时，如果一个结点内的数据量大于了结点“容量”，再将结点进行分裂。如此，可以保证每个结点内都存储着数据，避免了内存空间的浪费。
 在查询时，只有找到了位置对应的结点，那么结点下的所有点都会是此位置的附近点，更小的“容量”意味着每个结点内点越少，也就意味着查询的精度会越高。
  */
public class QuadTree
{

}